version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: guest_management_backend_sqlite
    environment:
      - DATABASE_URL=sqlite:///./guest_management.db
      - SECRET_KEY=your-secret-key-change-in-production
      - ACCESS_TOKEN_EXPIRE_MINUTES=1440
      - DEBUG=True
      - ENVIRONMENT=development
    volumes:
      - backend_static:/app/static
      - backend_exports:/app/exports
      - backend_qr_images:/app/qr_images
      - backend_templates:/app/templates
      - ./guest_management.db:/app/guest_management.db
    ports:
      - "8000:8000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: guest_management_frontend_sqlite
    ports:
      - "3000:80"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: guest_management_nginx_sqlite
    ports:
      - "80:80"
      - "8080:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - backend_static:/var/www/static
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  backend_static:
    driver: local
  backend_exports:
    driver: local
  backend_qr_images:
    driver: local
  backend_templates:
    driver: local
