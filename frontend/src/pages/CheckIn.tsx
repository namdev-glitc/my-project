import React, { useState, useEffect } from 'react';
import { useSearchParams, useNavigate } from 'react-router-dom';
import { CheckCircle, XCircle, User, Calendar, MapPin, Clock } from 'lucide-react';
import { checkinGuest, getGuest } from '../services/api';
import GoogleMap from '../components/GoogleMap';
import toast from 'react-hot-toast';

const CheckIn: React.FC = () => {
  const [searchParams] = useSearchParams();
  const navigate = useNavigate();
  const [guest, setGuest] = useState<any>(null);
  const [loading, setLoading] = useState(true);
  const [checkingIn, setCheckingIn] = useState(false);
  const [checkinResult, setCheckinResult] = useState<any>(null);

  const guestId = searchParams.get('guest_id');
  const qrId = searchParams.get('qr_id');

  useEffect(() => {
    const loadGuest = async () => {
      if (!guestId) {
        setLoading(false);
        return;
      }

      try {
        console.log('üîç ƒêang t·∫£i kh√°ch m·ªùi ID:', guestId);
        const guestData = await getGuest(parseInt(guestId));
        console.log('‚úÖ D·ªØ li·ªáu kh√°ch m·ªùi:', guestData);
        setGuest(guestData);
      } catch (error: any) {
        console.error('‚ùå L·ªói t·∫£i th√¥ng tin kh√°ch m·ªùi:', error);
        console.error('‚ùå Chi ti·∫øt l·ªói:', error.response?.data);
        toast.error('Kh√¥ng th·ªÉ t·∫£i th√¥ng tin kh√°ch m·ªùi');
      } finally {
        setLoading(false);
      }
    };

    loadGuest();
  }, [guestId]);

  const handleCheckIn = async () => {
    if (!guestId) return;

    setCheckingIn(true);
    try {
      const result = await checkinGuest(parseInt(guestId), {
        check_in_location: 'QR Code Check-in',
        qr_id: qrId
      });

      setCheckinResult(result);
      toast.success('Check-in th√†nh c√¥ng!');
    } catch (error: any) {
      console.error('L·ªói check-in:', error);
      toast.error(error.response?.data?.detail || 'L·ªói check-in');
    } finally {
      setCheckingIn(false);
    }
  };

  if (loading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-900 via-purple-900 to-indigo-900 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-16 w-16 border-b-2 border-white mx-auto mb-4"></div>
          <p className="text-white text-lg">ƒêang t·∫£i th√¥ng tin...</p>
        </div>
      </div>
    );
  }

  if (!guest) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-900 via-purple-900 to-indigo-900 flex items-center justify-center">
        <div className="text-center">
          <XCircle className="h-16 w-16 text-red-400 mx-auto mb-4" />
          <h1 className="text-2xl font-bold text-white mb-2">Kh√¥ng t√¨m th·∫•y kh√°ch m·ªùi</h1>
          <p className="text-gray-300 mb-4">QR code kh√¥ng h·ª£p l·ªá ho·∫∑c ƒë√£ h·∫øt h·∫°n</p>
          <button
            onClick={() => navigate('/')}
            className="btn-exp"
          >
            V·ªÅ trang ch·ªß
          </button>
        </div>
      </div>
    );
  }

  if (checkinResult) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-900 via-purple-900 to-indigo-900 flex items-center justify-center">
        <div className="text-center max-w-md mx-auto p-6">
          <CheckCircle className="h-20 w-20 text-green-400 mx-auto mb-6" />
          <h1 className="text-3xl font-bold text-white mb-4">Check-in th√†nh c√¥ng!</h1>
          <div className="bg-white/10 rounded-lg p-6 mb-6">
            <h2 className="text-xl font-semibold text-white mb-4">{guest.title} {guest.name}</h2>
            <div className="space-y-2 text-gray-300">
              <p><strong>T·ªï ch·ª©c:</strong> {guest.organization || 'Ch∆∞a c√≥'}</p>
              <p><strong>Ch·ª©c v·ª•:</strong> {guest.role || 'Ch∆∞a c√≥'}</p>
              <p><strong>Th·ªùi gian check-in:</strong> {new Date().toLocaleString('vi-VN')}</p>
            </div>
          </div>
          <button
            onClick={() => navigate('/')}
            className="btn-exp"
          >
            V·ªÅ trang ch·ªß
          </button>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-900 via-purple-900 to-indigo-900 flex items-center justify-center">
      <div className="max-w-md mx-auto p-6">
        <div className="text-center mb-8">
          <h1 className="text-3xl font-bold text-white mb-2">Check-in s·ª± ki·ªán</h1>
          <p className="text-gray-300">L·ªÖ k·ª∑ ni·ªám 15 nƒÉm EXP Techno Logy</p>
        </div>

        <div className="bg-white/10 backdrop-blur-lg rounded-lg p-6 mb-6">
          <div className="flex items-center mb-4">
            <User className="h-8 w-8 text-exp-primary mr-3" />
            <div>
              <h2 className="text-xl font-semibold text-white">{guest.title} {guest.name}</h2>
              <p className="text-gray-300">{guest.organization || 'Ch∆∞a c√≥ t·ªï ch·ª©c'}</p>
            </div>
          </div>

          <div className="space-y-3">
            <div className="flex items-center">
              <Calendar className="h-5 w-5 text-exp-primary mr-3" />
              <span className="text-gray-300">15/12/2024 - 18:00</span>
            </div>
            <div className="flex items-center">
              <MapPin className="h-5 w-5 text-exp-primary mr-3" />
              <span className="text-gray-300">Trung t√¢m H·ªôi ngh·ªã Qu·ªëc gia</span>
            </div>
            <div className="flex items-center">
              <Clock className="h-5 w-5 text-exp-primary mr-3" />
              <span className="text-gray-300">Th·ªùi gian check-in: {new Date().toLocaleString('vi-VN')}</span>
            </div>
          </div>

          {/* Google Map */}
          <div className="mt-4">
            <GoogleMap 
              location="Trung t√¢m H·ªôi ngh·ªã Qu·ªëc gia"
              eventName="L·ªÖ k·ª∑ ni·ªám 15 nƒÉm EXP Techno Logy"
              className="w-full"
            />
          </div>
        </div>

        {guest.checked_in ? (
          <div className="text-center">
            <CheckCircle className="h-16 w-16 text-green-400 mx-auto mb-4" />
            <h3 className="text-xl font-semibold text-white mb-2">ƒê√£ check-in</h3>
            <p className="text-gray-300 mb-6">B·∫°n ƒë√£ check-in v√†o l√∫c: {guest.check_in_time ? new Date(guest.check_in_time).toLocaleString('vi-VN') : 'Ch∆∞a c√≥ th√¥ng tin'}</p>
            <button
              onClick={() => navigate('/')}
              className="btn-exp"
            >
              V·ªÅ trang ch·ªß
            </button>
          </div>
        ) : (
          <div className="text-center">
            <button
              onClick={handleCheckIn}
              disabled={checkingIn}
              className="btn-exp w-full py-4 text-lg font-semibold disabled:opacity-50 disabled:cursor-not-allowed"
            >
              {checkingIn ? (
                <div className="flex items-center justify-center">
                  <div className="animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-2"></div>
                  ƒêang x·ª≠ l√Ω...
                </div>
              ) : (
                'X√°c nh·∫≠n Check-in'
              )}
            </button>
            <p className="text-gray-400 text-sm mt-4">
              Nh·∫•n ƒë·ªÉ x√°c nh·∫≠n tham d·ª± s·ª± ki·ªán
            </p>
          </div>
        )}
      </div>
    </div>
  );
};

export default CheckIn;
